{'signedDocument': 
    {'bytes': 
        '', 'digestAlgorithm': None, 'name': None
    }, 'originalDocuments': [None
    ], 'policy': None, 'signatureId': None
}